name: Build EXE for Windows

# Define triggers: build will run on push to the main branch or on release.
on:
  push:
    branches:
      - main
  release:
    types: [published]

jobs:
  build:
    # Run the job on Windows
    runs-on: windows-latest

    steps:
      # Step 1: Check out the code from the repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Step 2: Set up Python environment (3.x version can be specified or use default latest)
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'  # Specify Python version

      # Step 3: Cache pip packages to speed up builds
      - name: Cache pip packages
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # Step 4: Install Python dependencies using pip
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip  # Upgrade pip to the latest version
          pip install -r requirements.txt      # Install the required packages

      # Step 5: Install PyInstaller to package the Python script into a .exe file
      - name: Install PyInstaller
        run: pip install pyinstaller

      # Step 6: Build the application into an .exe file using PyInstaller
      - name: Build EXE using PyInstaller
        run: pyinstaller --onefile --name jefo main.py  # Replace 'main.py' with your main Python file

      # Step 7: Upload the .exe artifact for download
      - name: Archive Build Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: jefo-exe
          path: dist/jefo.exe  # Path to the compiled .exe file

      # Step 8: Create a GitHub Release and attach the .exe if a release is triggered
      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: dist/jefo.exe  # Attach the .exe file to the release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Use the GitHub token for authentication
